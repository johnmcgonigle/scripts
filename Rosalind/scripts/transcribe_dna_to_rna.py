nucleotide_relationships = {'A': 'U', 'T': 'A', 'C': 'G', 'G': 'C'}
dna_bases = {'A': 'T', 'T': 'A', 'C': 'G', 'G': 'C'}


def transcriber(sequence):
    for base in list(sequence):
        yield nucleotide_relationships[base]


def sequence_transcription(dna):
    return ''.join(transcriber(dna))


rna = sequence_transcription('GATGGAACTTGACTACGTAAATT')


def dna_to_rna(dna):
    return dna.replace('T', 'U')

input_seq = 'GATGGAACTTGACTACGTAAATT'
rna = dna_to_rna('GATGGAACTTGACTACGTAAATT')
assert rna == 'GAUGGAACUUGACUACGUAAAUU'

test_seq = 'CTACCTATATACATTTTTACGTACCCCTCTGCCCAAAATATACTTTTTGCCACCGAAATCATAATTACCTTGGAACAAGGCCCAGGAGCTAACACCAAGAACAATTCATCTACGCCGTCGTGGTCGGAATCAAAACACTCCTTAACTAGGGCCAGCGTCCTCCAGATCCCCAAAGTTGACCTGCTAACTCATAAAGTTCTAAGTTCCTTATGTACCAAACACCTCCCCCAACGCGCATGGCCCTCGGTGGAGGGCAACCGGTAATCGATTTAAGTACAGGCACAAGACTAGGTCAGGTGTGAGGCCCCAGAGCATGACTGGCCTCCCGCAACTTACTTAAGCTCTGGCTCAATGACGACGAGTGATATCCATTAATGGGATACAGCGGGGAGTACTTCGCGAGGGAATTCCCGAAGAAATTAAAATACCACTGTGTGGACTAAAAAAGACGTCCGATAGGGGACAATTCTAATGTGTTTGTCTTTTTCCTTACCCCCTTTTTGAGTAGCCCTTTGCCCAACCTGGATCTCCTGCTGTGGTCGCAACATTCCGATGACGATTAGATGATACCTGATGGGTAAACCCGACGGGGACATTGGGTAGATTTCATCTCTCTAGAACCTCGAGCTGTCGGGGGGACAAAAACACCCGTTGTAGACGTTCTCATATCGATCTCTAACTGTGATGAATAAATTGATGTCCGTGGCAGACGAGAATCATAGCAGACAGCGACCGGAGTGAATTATCTCCGCTACGTAGTAAGCTAGTATAAGGCTCAAGCGCATTGACTAACTCCGTAAGATCTGGCGCAACGATCCCAAATGATCTATCTTTTTTGTGTCCCCCATTCACTAAGCGAAGAATCGCACGCTATGTATTGAATGGATATGTGGCTAGAAACATGTCCGACCATTTTGTGACGTAGGAAC'
rna = dna_to_rna(test_seq)


def dna_complement(sequence):
    for base in list(sequence[::-1]):
        yield dna_bases[base]


def produce_dna_complement(dna_seq):
    return ''.join(dna_complement(dna_seq))


assert produce_dna_complement('AAAACCCGGT') == 'ACCGGGTTTT'

input_dna = 'TCTTCTGAATGAATGGGACATAAGCGTGCCGTACATGGAGGCTCCCCTGGATGCCCCCTACGGTTGCATGAATCCTTGCATTACACGTGTGATGCGCGCGCCAAAGTCCTATTATACCAGCCATTTCGTCCAACAGATCTACCAGATATAATAAAGCCACGAGGAACCTTCAGTCAAGGATCAAGCGTGCCATAAGAATAACCGTTAACGTGAGAACGCCGACCAAAGATTCTGCGTGAGTGATCACGACCAGGCATCGGGTCGTGGACTGGCTACGTGTTAATGTGTATAGCGGGATCTCTACACAATTCAAGAGCCTTTATAATCCTAACACATAAGCAAGCAGACATTGTTGCCCACACTGCATTGCTTCTGTGTCAGGTACTCGGAAGGCCGCACACGCGACCCCCAGCGGCATCTTGTGCCATCGGCCGCACATGTTAAAGTTCTGTCCATACTTGTACTTCCGCGAACTAGGGGTCGGTCGCATTATTCCACGTAAATAGTTTAGATTGACGTACCCGCACGAGGCTTACTGTATCACTTACTCCTTCTACTTGATGGTCTACGGGTTGTGTAGGTGCGTCGCATGGAAACGGGCTTTCGGGGTAGAGGCTGAGGGACCCAAGCTATTAGAACATACACGGGACACTGTAGCCTGGATAGGCGTGCTGTGGGCCAATCAATATGGCATCGTCGTCTCACAGCCAATGGTCTAGGTGAATAGGTATTGATGGTTCTGTAAAAGGTTACACAGACGACACTGTCTACGATTTTAGCTCTTCTCTAACCGGTGAGTAGTAGTCACC'
complement_dna = produce_dna_complement(input_dna)
print(complement_dna)
